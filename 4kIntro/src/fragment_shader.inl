/* File generated with Shader Minifier 1.1.4
 * http://www.ctrl-alt-test.fr
 */
#ifndef FRAGMENT_SHADER_INL_
# define FRAGMENT_SHADER_INL_

const char *fragment_shader_glsl_pr =
 "#version 430\n"
 "layout(location=0)uniform vec4 fpar[4];"
 "layout(location=0)out vec4 color;"
 "in vec2 p;"
 "vec3 mod289(vec3 v)"
 "{"
   "return v-floor(v*(1./289.))*289.;"
 "}"
 "vec2 mod289(vec2 v)"
 "{"
   "return v-floor(v*(1./289.))*289.;"
 "}"
 "vec3 mod7(vec3 v)"
 "{"
   "return v-floor(v*(1./7.))*7.;"
 "}"
 "vec3 permute(vec3 v)"
 "{"
   "return mod289((34.*v+1.)*v);"
 "}"
 "vec2 cellular(vec2 v)"
 "{"
   "\n#define K 0.142857142857\n"
   "\n#define Ko 0.428571428571\n"
   "\n#define jitter 1.0\n"
   "vec2 j=mod289(floor(v)),m=fract(v);"
   "vec3 y=vec3(-1.,0.,1.),x=vec3(-.5,.5,1.5),f=permute(j.x+y),r=permute(f.x+j.y+y),o=fract(r*K)-Ko,z=mod7(floor(r*K))*K-Ko,n=m.x+.5+jitter*o,c=m.y-x+jitter*z,i=n*n+c*c;"
   "r=permute(f.y+j.y+y);"
   "o=fract(r*K)-Ko;"
   "z=mod7(floor(r*K))*K-Ko;"
   "n=m.x-.5+jitter*o;"
   "c=m.y-x+jitter*z;"
   "vec3 l=n*n+c*c;"
   "r=permute(f.z+j.y+y);"
   "o=fract(r*K)-Ko;"
   "z=mod7(floor(r*K))*K-Ko;"
   "n=m.x-1.5+jitter*o;"
   "c=m.y-x+jitter*z;"
   "vec3 s=n*n+c*c,d=min(i,l);"
   "l=max(i,l);"
   "l=min(l,s);"
   "i=min(d,l);"
   "l=max(d,l);"
   "i.xy=i.x<i.y?i.xy:i.yx;"
   "i.xz=i.x<i.z?i.xz:i.zx;"
   "i.yz=min(i.yz,l.yz);"
   "i.y=min(i.y,i.z);"
   "i.y=min(i.y,l.x);"
   "return sqrt(i.xy);"
 "}"
 "float random11(in vec2 v)"
 "{"
   "return fract(sin(dot(v.xy,vec2(12.9898,78.233)))*43758.5);"
 "}"
 "float noise(in vec2 v)"
 "{"
   "vec2 y=floor(v),r=fract(v);"
   "float f=random11(y),l=random11(y+vec2(1.,0.)),i=random11(y+vec2(0.,1.)),n=random11(y+vec2(1.,1.));"
   "vec2 m=r*r*(3.-2.*r);"
   "return mix(f,l,m.x)+(i-f)*m.y*(1.-m.x)+(n-l)*m.x*m.y;"
 "}"
 "void main()"
 "{"
   "vec2 v=gl_FragCoord.xy/vec2(1920,1080),l=vec2(v*20.);"
   "color=vec4(1.,.5,.33,1.);"
 "}";

#endif // FRAGMENT_SHADER_INL_
