/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef POST_PROCESSING_SHADER_INL_
# define POST_PROCESSING_SHADER_INL_

const char *post_processing_shader_glsl_pr =
 "#version 440\n"
 "#line 1 0\n"
 "layout(location=0)uniform vec4 fpar[4];"
 "layout(location=0)out vec4 color;"
 "uniform sampler2D inputTexture;"
 "in vec2 p;\n"
 "#define time fpar[0].x;\n"
 "vec2 resolution=vec2(fpar[0].y,fpar[0].z);"
 "float bounds(in vec2 v,in vec2 e,in vec2 b)"
 "{"
   "if(v.x<b.x&&v.y<b.y&&v.x>e.x&&v.y>e.y)"
     "return 1;"
   "else"
     " return 0;"
 "}"
 "float LW(in vec2 v)"
 "{"
   "return bounds(v,vec2(.47,.52),vec2(.53))+bounds(v,vec2(.47,.47),vec2(.48,.52))+bounds(v,vec2(.495,.49),vec2(.505,.52))+bounds(v,vec2(.52,.47),vec2(.53,.52));"
 "}"
 "float LI(in vec2 v)"
 "{"
   "return bounds(v,vec2(.495,.47),vec2(.505,.53))+bounds(v,vec2(.48,.47),vec2(.52,.48))+bounds(v,vec2(.48,.52),vec2(.52,.53));"
 "}"
 "float LN(in vec2 v)"
 "{"
   "float r=bounds(v,vec2(.48,.47),vec2(.49,.53))+bounds(v,vec2(.51,.47),vec2(.52,.53));"
   "v.x+=(v.y-.5)/2;"
   "r+=bounds(v,vec2(.495,.47),vec2(.505,.53));"
   "return r;"
 "}"
 "void main()"
 "{"
   "vec2 v=.5*p+.5;"
   "color=max(vec4(0),texture(inputTexture,v));"
   "vec4 r;"
   "for(int i=-20;i<=20;i++)"
     "r+=max(vec4(0),texture(inputTexture,v+vec2(i/fpar[0].y,0))-vec4(.7))*.2*(1-abs(i*.05));"
   "for(int i=-20;i<=20;i++)"
     "r+=max(vec4(0),texture(inputTexture,v+vec2(0,i/fpar[0].z))-vec4(.7))*.2*(1-abs(i*.05));"
   "color+=r/5;"
   "if(abs(distance(gl_FragCoord.xy,resolution.xy/2)-6)<1)"
     "color=vec4(.3,1.,.15,1.);"
   "float i=fpar[0].w;"
   "if(v.x<i*.04&&mod(v.x,.04)>.02&&v.y>.97)"
     "color=vec4(.3,1.,.15,1.);"
   "if(i>=25)"
     "{"
       "float f=0;"
       "v=vec2(1)-v;"
       "f=LW(v-vec2(.1,0))+LI(v)+LN(v+vec2(.1,0));"
       "f=min(1,f);"
       "if(f>0)"
         "color+=vec4(.2,1,.2,1.)*(sin(fpar[0].x*5)/2+.5);"
     "}"
 "}";

#endif // POST_PROCESSING_SHADER_INL_
