import sys,os
import time
import ctypes

"""
Simple python preprocessor to build shaders from multiple files (or anything really). Currently only works with a flat directory
Also isn't recursive (yet)
@author Benjamin Welsh
"""

if len(sys.argv)<2:
	print("Usage: %s <input>"%sys.argv)
	exit(1)

error=0
no_debug="-nodebug" in sys.argv
logpath="D:\\tmp\\pp%d.log"%(time.time())
li=1
while os.path.exists(logpath):
	logpath="D:\\tmp\\pp%d_%d.log"%(time.time(),li)
	li+=1
log=open(logpath,'w')
log.write("python glsl preprocessor log\n")
log.write(repr(sys.argv)+"\n")

file_index=[]

def parse_file(file_num,sourcefile,outfile):
	for lnum,line in enumerate(sourcefile):
		if line.lstrip().startswith("#include "):
			fname=line.strip().split(' ')[1]
			if fname in file_index:
				continue
			fpath=path+"/"+fname
			try:
				with open(fpath) as i:
					outfile.write("// ---------------------- start %s ---------------------- //\n"%fname)
					file_index.append(fname)
					if not no_debug:
						outfile.write("#line 1 %d\n"%len(file_index))
					parse_file(len(file_index),i,outfile)
					outfile.write("\n// ----------------------- end %s ----------------------- //\n"%fname)
					if not no_debug:
						outfile.write("#line %d %d\n"%(lnum+2,file_num))
			except IOError as e:
				error=1
				print("Error on line %d (%s): Bad include %s"%(lnum+1,sys.argv[1],fname),e)
				log.write(str(e))
				log.write("\n")
				ctypes.windll.user32.MessageBoxW(0, "Error while preprocessing %s:%d:\nCould not include %s\n(%s)"%(sys.argv[1],lnum+1,fname,e), "glsl preprocessor error", 1)
		else:
			outfile.write(line)

try:
	path=os.path.dirname(os.path.abspath(sys.argv[1]))
	log.write("path:"+path+"\n")
	with open(sys.argv[1]) as f, open(sys.argv[1]+".pr",'w') as g:
		g.write("// Generated by preprocessor.py //\n")
		g.write("#version 430\n")
		if not no_debug:
			g.write("#line 1 0\n")
		parse_file(0,f,g)

except IOError as e:
	log.write(e+"\n")
	error=1
log.close()
if error:
	ctypes.windll.user32.MessageBoxW(0, "Error while preprocessing %s. Check %s for details."%(sys.argv[1],logpath), "glsl preprocessor error", 1)

try:
	with open(sys.argv[1]+".prindex",'w') as f:
		f.write("0 <this file>\n")
		for i,n in enumerate(file_index):
			f.write("%d %s\n"%(i+1,n))
except IOError as e:
	log.write(e+"\n")
exit(error)
