import sys,os
import time
import ctypes

"""
Simple python preprocessor to build shaders from multiple files (or anything really). Currently only works with a flat directory
Also isn't recursive (yet)
@author Benjamin Welsh
"""

if len(sys.argv)!=2:
	print("Usage: %s <input>"%sys.argv)
	exit(1)

error=0

logpath="D:\\tmp\\pp%d.log"%(time.time())
li=1
while os.path.exists(logpath):
	logpath="D:\\tmp\\pp%d_%d.log"%(time.time(),li)
	li+=1
log=open(logpath,'w')
log.write("python glsl preprocessor log\n")
log.write(repr(sys.argv)+"\n")
try:
	path=os.path.dirname(os.path.abspath(sys.argv[1]))
	log.write("path:"+path+"\n")
	with open(sys.argv[1]) as f, open(sys.argv[1]+".pr",'w') as g:
		g.write("// Generated by preprocessor.py //\n")
		for lnum,line in enumerate(f):
			if line.lstrip().startswith("#include "):
				fname=line.strip().split(' ')[1]
				fname=path+"/"+fname
				try:
					with open(fname) as i:
						g.write("\n// ---------------------- start %s ---------------------- //\n"%fname)
						for iline in i:
							g.write(iline)
						g.write("\n// ----------------------- end %s ----------------------- //\n"%fname)
				except IOError as e:
					error=1
					print("Error on line %d (%s): Bad include %s"%(lnum+1,sys.argv[1],fname),e)
					log.write(str(e))
					log.write("\n")
			else:
				g.write(line)
except IOError as e:
	log.write(e+"\n")
	error=1
log.close()
if error:
	ctypes.windll.user32.MessageBoxW(0, "Error while preprocessing %s. Check %s for details."%(sys.argv[1],logpath), "glsl preprocessor error", 1)

exit(error)
